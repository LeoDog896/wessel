name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: llvm-tools-preview
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.0
      with:
        cache-all-crates: true
    - name: Build Rust
      run: cargo build --verbose
    - name: Cache Docker images
      id: cache-docker
      uses: ScribeMD/docker-cache@0.3.6
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
    - name: Build Docker
      if: steps.cache-docker.outputs.cache-hit != 'true'
      working-directory: ./crates/risc-v/resources
      run: docker build -t risc-v-sbi-linux .
    - name: Run Docker
      working-directory: ./crates/risc-v/resources
      run: docker run --rm --privileged -v "$(pwd):/artifacts" risc-v-sbi-linux:latest
    - name: Run tests with code coverage information 
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --no-fail-fast --release --verbose
      env:
        RUSTC_BOOTSTRAP: '1'
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Run grcov 
      id: coverage
      uses: rraval/grcov@master
    - name: Coveralls upload
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: llvm-tools-preview
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.0
      with:
        cache-all-crates: true
    - name: Build Rust
      run: cargo build --verbose
    - name: Cache Docker images
      id: cache-docker
      uses: ScribeMD/docker-cache@0.3.6
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
    - name: Build Docker
      if: steps.cache-docker.outputs.cache-hit != 'true'
      working-directory: ./crates/risc-v/resources
      run: docker build -t risc-v-sbi-linux .
    - name: Run Docker
      working-directory: ./crates/risc-v/resources
      run: docker run --rm --privileged -v "$(pwd):/artifacts" risc-v-sbi-linux:latest
    - name: Download grcov
      run: |
        mkdir -p "${HOME}/.local/bin"
        curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.10/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.local/bin"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Run coverage
      run: cargo xtask coverage
    - name: Upload to codecov.io
      if: github.ref == 'refs/heads/main'
      uses: codecov/codecov-action@v3
      with:
        directory: coverage
        files: tests.lcov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

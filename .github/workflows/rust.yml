name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: llvm-tools-preview
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.0
      with:
        cache-all-crates: true
    - name: Build Rust
      run: cargo build --verbose
    - name: Cache Docker images
      id: cache-docker
      uses: ScribeMD/docker-cache@0.3.6
      with:
        key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
    - name: Build Docker
      if: steps.cache-docker.outputs.cache-hit != 'true'
      working-directory: ./crates/risc-v/resources
      run: docker build -t risc-v-sbi-linux .
    - name: Run Docker
      working-directory: ./crates/risc-v/resources
      run: docker run --rm --privileged -v "$(pwd):/artifacts" risc-v-sbi-linux:latest
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: Generate code coverage
      run: cargo llvm-cov --features pretty-print,const_prec_climber,memchr,grammar-extras --workspace --lcov --output-path lcov.info --release
    - name: Upload Results to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: lcov.info
        flags: unittests
        name: pest-ci-coverage
        fail_ci_if_error: false
        verbose: true
